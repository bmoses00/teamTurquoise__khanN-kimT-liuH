henryL -- 2019-10-20 23:59
Nahi created the component map which correlates to the sitemap directly.
The component map incorporates the pages and such to lead into the creation of
the sitemap by Taejoon. In accordance with the component map and site map,
Henry was able to visualize the database layout diagram. In this, he utilized
tables to finish up on the layout. We looked at other teams design docs and we
improved ours by learning from it.

nahiK -- 2019-10-21
Edited the physical component map in order for the app to run and correlate smoothly.

nahiK -- 2019-10-22
Finished working on the component map, thinking this was the final revision.

taejoonK -- 2019-10-23 23:54
I added onto the db builder extra code and substituted the would-be variables with random values.
Still figuring out on how to incorporate it with the main flask app.

henryL -- 2019-10-23 14:20
I worked on the different pages: signup, login, loggedIn, and error. I also started the app.py file to
get everything connected

nahiK -- 2019-10-23 14:23
Aided Henry in the creation of the templates for signup and error. Suggested the idea of the error page.

taejoonK -- 2019-10-24 Pushed my parts of the backend code on the tables to the repository. I introduced the data grouping method of tuples to PM Nahi.

nahiK -- 2019-10-25 17:30
Cloned Taejoon's part of the backend and helped with the creation of the tables. He suggested grouping data through the usage of tuples.

nahiK -- 2019-10-26 18:47
Worked on the hardcopy instructions on how to read and process our code.

henryL -- 2019-10-27 11:20
Added a template html to make code look neater

henryL -- 2019-10-27 17:20
Added an addToStory page

nahiK -- 2019-10-27 20:10
Working on the README file on crystal clear instructions for any given user to utilize and run our project.

henryL -- 2019-10-27 20:20
Realized that we need to allow users to edit a story

henryL -- 2019-10-28 00:20
Just realized that code only works if there is a dummy user and story.

henryL -- 2019-10-28 00:50
Not sure if we can finish in time. We still need to add to functionality
 so that users can edit stories that they have not edited yet

henryL -- 2019-10-28 12:50
Added another table called STORYEDITS which is a log of all the edits. A story is now built by going through
STORYEDITS and adding up all the texts

henryL -- 2019-10-28 7:50
We must:
Add restrictions:
Can only update once, 
  For each row in STORYEDITS
    if userID is present
      can not update
    else: can update

Printcontent:
For each storyID in STORIES:
  for each row in STORYEDIT
    if storyID matches the storyID from STORIES and userID is present in at least one
      take text and add it print into table

taejoonK -- 2019-10-29 1:46
We finished creating the editStory page. Most recent update can be found in the second table in the logged-in page. Attempted to add restrictions to users from editting stories they've already editted but failed due to our inability to incorporate the canADD function into the rest of the code. We have a general idea of using jinja conditionals in loggedin.html to determine if a user can edit or not, but couldn't materialize our ideas. 


**LOOKING INTO ADDING TO THIS DOC LATER, NOT FINISHED, NEED ENTRIES FOR EACH DAY, WHETHER IT BE SUBSTANTIAL WORK OR NOT**
